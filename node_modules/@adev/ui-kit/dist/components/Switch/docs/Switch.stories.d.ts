import React from "react";
declare const _default: import("@storybook/types").ComponentAnnotations<import("@storybook/react/dist/types-0a347bb9").R, import("../../../utils/defaultProps").defaultProps & {
    color?: string | undefined;
    name?: string | undefined;
    onChange?: ((event?: React.ChangeEvent<Element> | undefined) => void) | undefined;
    textOn?: React.ReactNode;
    textOff?: React.ReactNode;
    checked: boolean;
    disabled?: boolean | undefined;
    inputHtmlId?: string | undefined;
}>;
export default _default;
export declare const Playground: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, import("../../../utils/defaultProps").defaultProps & {
    color?: string | undefined;
    name?: string | undefined;
    onChange?: ((event?: React.ChangeEvent<Element> | undefined) => void) | undefined;
    textOn?: React.ReactNode;
    textOff?: React.ReactNode;
    checked: boolean;
    disabled?: boolean | undefined;
    inputHtmlId?: string | undefined;
}>;
export declare const Color: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0a347bb9").R, import("../../../utils/defaultProps").defaultProps & {
    color?: string | undefined;
    name?: string | undefined;
    onChange?: ((event?: React.ChangeEvent<Element> | undefined) => void) | undefined;
    textOn?: React.ReactNode;
    textOff?: React.ReactNode;
    checked: boolean;
    disabled?: boolean | undefined;
    inputHtmlId?: string | undefined;
}>;
export declare const Label: () => JSX.Element;
